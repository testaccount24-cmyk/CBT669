 /* test ispf panel exit - build 006             rexx */

 say 'ISPF panel exit ISPDPX01 installation verification (005)'

 pnlpfx ='ISX1PNL'
 say 'Panel prefix' pnlpfx
 zz=Listdsi('sysexec file')
 plib=sysdsname
 llib='CBT669.LINKLIB'
 llib=''
 env = left(sysvar('sysenv'),1)   /* Fore/Back */
 libdef=''
 address ispexec
 "control errors return"
 zerrlm=''
 "libdef ispplib dataset id('"plib"') stack"
 if rc<>0 then call close 8 'Libdef plib' plib 'failed rc' rc zerrlm
 libdef=libdef 'ISPPLIB'

 say 'Test indirect panel stem long variables'
 TestPanel005.1 = ")ATTR                 "
 TestPanel005.2 = " + type(text) color(green) skip(on) "
 TestPanel005.3 = " _ type(input) color(turq) hilite(uscore) caps(on)"
 TestPanel005.4 = " ! type(input) color(turq) hilite(uscore) caps(off)"
 TestPanel005.5 = ")BODY expand(\\)      "
 TestPanel005.6 = "%\ \Test panel exit 1 - IVP 004\ \+"
 TestPanel005.7 = "%Cmd =>_zcmd \ \ +"
 TestPanel005.8 = "+                     "
 TestPanel005.9 = "+Just some text       "
 TestPanel005.10 = "+"
 TestPanel005.11 = left("+Input your name!name",60)"+"
 TestPanel005.12 = "+                    "
 TestPanel005.13 = ")INIT                "
 TestPanel005.14 = " &name = 'test1'      "
 TestPanel005.15 = ")PROC                "
 TestPanel005.16 = " ver (&name,nb)"
 TestPanel005.0 = 16
 do n=1 to TestPanel005.0 *0
   say TestPanel005.n
 end
 ISX1pnlstem='TestPanel005.' /* set indirect reference */
 Call DoTest pnlpfx'5',8

 say 'Testing return version'
 trace r
 cc=ISPDPX01('Version')
 cc=ISPDPX01('test')
 trace off

 say 'Testing copy stack to stem'
 trace r
 address tso "delstack"
 queue 'Kilroy'
 queue ' was'
 queue '  here'
 say 'queued #='queued()
 cc=ISPDPX01('q2s kilroy.')
 address tso "delstack"
 say 'Q2S rc='cc
 if cc=0 then do
   say 'kilroy stem'
   do n=0 to kilroy.0
     say 'kilroy.'n'='kilroy.n
   end
 end
 trace off

 say 'Testing bad command'
 trace r
 cc=ISPDPX01('q2z kilroy.')
 if cc<>12 then say '**bad response'
 trace off

 Call close 0 'All ok'

DoTest: /* panelid, maxrc */
 arg dtpnl,dtmaxrc
 Signal on Error name DoTestE
 Signal on Syntax name DoTestS
 zerrlm=''
 "control errors return"
 if enf='B' then "control nondispl enter"
 "Display panel("dtpnl")"
 Return DoTestRc()
DoTestRc:
 say 'Display' dtpnl 'rc' rc zerrlm
 if rc>dtmaxrc then call Close 8 'rc' rc 'gt maxrc' dtmaxrc
 say ''
 return 0
DoTestE: Return DoTestRc()
DoTestS: Return DoTestRc()

Close:
 trace off
 parse arg n m
 if m<>'' then say m
 do dn=1 to words(libdef)
   "libdef" word(libdef,dn)
 end
 exit word(n 0,1)
