
*------------------REXX Say------------------------------------------*

         Macro
         SayIt &t,&l
         gblc  &trace
         aif   ('&trace' ne 'Y').x
         lcla  &len
         lclc  &lbl
&lbl     setc  'S&sysndx'
&len     seta  l'logr
         aif   (k'&t eq 0).txn
&len     seta  (k'&t)-2
         mvc   logr(&len),=c&t
.txn     anop
         aif   (k'&l eq 0).tln
&len     seta  &l
.tln     anop
         clc   =c'TRACE',opt
         jne   &lbl.c
         RXSAY logr,&len
.clr     anop
&lbl.c   equ   *
         clear logr
.x       Mend

*------------------Set reason text-----------------------------------*

         Macro
         Reason &t,&c
         lcla  &l
&l       seta  k'&t-2
         mvc   reason(&l),=c&t
         mvc   reasonl,=a(&l)
         aif   (k'&c eq 0).x
         mvc   rc,=a(&c)
.x       Mend

*------------------Trace block start/end-----------------------------*

         Macro
.* TrcBlk / TrcBlkEnd is used around larger trace blocks. This
.* cuts down on the number of instructions executed.
         TrcBlk
         gblc  &trcblka
         aif   ('&trcblka' eq '').go
         mnote 8,'***trcblka ne null'
         mexit
.go      anop
&trcblka setc  'TB&sysndx.END'
         cli   trace,c'Y'
         jne   &trcblka
         Mend

         Macro
         TrcBlkEnd
         gblc  &trcblka
&trcblka ds    0h
&trcblka setc  ''
         Mend

         Macro
&ml      TrcLog &t,&k
         lclc  &l
&l       setc  'TL&sysndx'
&ml      ds    0h
         cli   trace,c'Y'
         jne   &l.x
         mvlit logr,&t
         aif   (k'&k eq 0).k0
         RxSay logr,&k
         ago   .b
.k0      RxSay logr
.b       anop
         clear logr
&l.x     equ   *
         Mend
