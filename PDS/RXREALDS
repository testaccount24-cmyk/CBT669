//RXRD002  JOB (1),'RXREALDS',
//*  RESTART=IVP1,
//        CLASS=A,COND=(0,LT),REGION=64M
//*
//* ?? REXX return actual ds from rel gds or alias
//*
//  SET IVP=IVP1
//*
//A       EXEC ASMACL, XL,MACLIST=RXREALDS,
//        PARM.C='RENT,TERM',
//        PARM.L='NCAL,LET,LIST,XREF,RENT,RMODE(ANY)'
//C.SYSLIB  DD DISP=SHR,DSN=SYS1.MACLIB
//          DD DISP=SHR,DSN=SYS1.MODGEN
//          DD DISP=SHR,DSN=CBT669.PP.RXREALDS.LIB
//C.SYSTERM DD SYSOUT=*
//C.SYSIN   DD *
**asma opt term
**asma syslib sys1.maclib sys1.modgen CBT669.maclib

* The JPAQ option will improve performance if the module is not
* in the lpalib, as it will retain the module in the JPAQ.
* The module is not very big so should not impact virtual storage.
&jpaq    setc  'Y'                     Keep module in the JPAQ
&jpaq    setc  'N'                     Do not keep module in the JPAQ

RXREALDS TITLE 'Return Absolute or True name'
*-
*
* Function returns real name for relative gds or alias.
* Will return requested name if neither reative gds nor alias.
*
* Syntax
*
* cc=RXREALDS(name,Ýnft¨)
*
* name   relative gds or alias
* nft    returned text if name is not found. Default is a null string
*
* Sample
*
*  cc=RXREALDS('WJ.TEST.GDG(-1)')
*  say cc   /*  WJ.TEST.GDG.V1001V00 */
*  cc=ListDsi("'"RXREALDS('WJ.TEST.GDG(-1)')"'")
*
* New in this build
*  2023-06-14  Handle quoted name
*              Parm = VERSION then return version text.
*
*
* Contact info
*  email   willy@harders-jensen.com
*  web     https://harders-jensen.com  (newest version here)
*
*-

         print off
         copy rexxmacs
         copy sysmacs
         yregs ,
         print on
&build   setc  '002.001'

RXREALDS Csect ,
RXREALDS amode 31
RXREALDS rmode any
         bakr  14,0
         lr    r12,r15
         Using RXREALDS,r12

         Getmain R,lv=$wrkl,loc=ABOVE
         lr    r10,r1
         using $wrk,r10
         la    r13,sa1
         mvi   dsname,c' '
         mvc   dsname+1(l'dsname-1),dsname
         oc    dsname,blanks

         aif   ('&jpaq' ne 'Y').jpaqn
*- Keep module in JPAQ for duration of job / TSO session
         CDEUCTZ2
.jpaqn   anop

*- Initiate rexx env
         ereg  0,1
         RxInit parmlist=((p1,A),(p2,A))  area=dsname
         lm    r14,r15,p1
* handle quoted name begin
         cli   0(r14),c''''
         jne   qnn                         not quoted
         la    r14,1(,r14)                 past front quote
         ahi   r15,-2                      length minus 2 quotes
qnn      ds    0h
* handle quoted name end

         bctr  r15,0                       machine length for copy
         j     *+10
         mvc   dsname(*-*),0(r14)
         ex    r15,*-6

* return version
         mvc   dw,dsname
         oc    dw,blanks
         clc   =c'VERSION',dw
         jne   versn
         RxRetval verstxt,l'verstxt
         j     exit
versn    ds    0h

*- Locate the catalog entry
         mvc   camlste(camlstll),camlstl
         la    r0,dsname
         st    r0,camlste+4
         la    r0,camlwrk
         st    r0,camlste+12
         LOCATE camlste            Locate Catalog Entry
         ltr   r15,r15
         jnz   LocErr

*- Return original parm
         StrLen data=dsname        r15 = length
         RxRetval dsname,(r15)

Exit     ds    0h
         Freemain R,lv=$wrkl,a=(r10)
         sr    r15,r15
         pr    ,

*- Locate error, return parm 2 (not-found-string)
LocErr   ds    0h
         lm    r2,r3,p2
         RxRetval (r2),(r3)
         j    exit

*-
camlstl  CAMLST NAME,*-*,,*-*
camlstll EQU   *-camlstl
blanks   dc    cl120' '
         gblc  &$sclock
         Macro
         SClock
         gblc  &$sclock
&$sclock setc  '&sysclock'(1,19)
         Mend
         SClock
verstxt  dc    c'RXREALDS &build &$sclock'
         ltorg

$wrk     Dsect ,
sa1      ds    18f
camlste  ds    xl(camlstll)
dsname   ds    cl44
         ds    0d
camlwrk  ds    cl265                    Locate really only uses 265
         ds    0d
         RexxMacs ds
         ds    0d
dw       ds    d
fw       ds    f
         ds    0d
$wrkl    equ   *-$wrk

         RexxMacs dsect
         END   ,
//L.SYSLMOD  DD DISP=SHR,DSN=CBT669.LINKLIB(RXREALDS)
//*
//* Production version is in CBT669.LINKLIB but could be
//* in CBT669.LPALIB as program is RENT and REFR.
//*
//* Activate dynamic if in lpalib:
//*   SETPROG LPA,ADD,MODNAME=RXREALDS,DSNAME=CBT669.LINKLIB
//*
//IVP1     EXEC PGM=IKJEFT1B,PARM='RXRD&IVP'
//STEPLIB  DD DISP=SHR,DSN=CBT669.LINKLIB
//SYSEXEC  DD DISP=SHR,DSN=CBT669.PP.RXREALDS.LIB
//SYSTSPRT DD SYSOUT=*,OUTLIM=1000
//SYSTSIN  DD DUMMY
