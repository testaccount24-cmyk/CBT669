/*                                                             rexx

 RXRDPRML IVP

 Positional parms: mbrname,opt1,opt2,stemname,records,trace

  stemname
   default='PARMREC.'
  opt1
   'XC1' exclude comments = '*' in col1
   'XC2' exclude comments = '/*' in col1-2
  opt2
   'Y'   retain blank lines (default)
   'N'   ignore blank lines
  records
   default=500
  trace
   'Y'   do trace
*/ */

 Call DoIt 'ADYSET00'
 Call DoIt 'ADYSET00 opt1(xc1)'
 Call DoIt 'ANTMIN00'
 Call DoIt 'ANTMIN00 stem(antm.) opt1(xc2)'
 Call DoIt 'NOTEXIST'
 Call DoIt 'diag00 recs(10)'

Exit 0

DoIt: Procedure
 arg p
 parse var p mbr . 'OPT1(' opt1 . ')' . 0 . 'OPT2(' opt2 . ')' .,
 0 . 'RECS(' recs . ')' . 0 . 'STEM(' stm . ')' . 0 . 'TRACE(' trc . ')' .
 say 'Read parmlib mbr' mbr 'to stem' stm 'opt1='opt1 'opt2='opt2,
     'records='recs 'trace='trc
 cc=RXRDPRML(mbr,opt1,opt2,stm,recs,trc)
 say 'rc' cc  'rs' strip(RXRDPRML_ERRMSG)
 /*cc=rexxgblv('rlist')  */

 stm=word(stm 'PARMREC.',1)
 doitl="say '"stm"0='"stm"0;",
       "do n=1 to" stm"0;say" stm"n;end;drop" stm
 if cc<>0 then say 'Reason:' RXRDPRML_ERRMSG
 else interpret doitl
 say ''
 return 0.
