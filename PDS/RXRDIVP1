 /* rexx */

 dbase = userid()'.RXREALDS'
 gbase = dbase'.GDS'

 say 'Deleting orphans from earlier run'
 Call DelTestDs

 say ''
 say 'Start IVP1'
 say ''
 say 'Version' RxRealds('version')
 say ''

 zz=Outtrap('lst.')
 "listc lvl("gbase")"
 c1=rc
 zz=Outtrap('off')
 if c1<>0 then do
   "DEFINE GDG(NAME('"gbase"') LIMIT(4) SCRATCH )"
   if rc<>0 then exit xmsg('Cannot define new gdg' gbase 'rc' rc,8)
   say 'gdgbase' gbase 'defined'
   say ''
   /* create test gdss */
   do gn=1 to 4
     cc=bpxwdyn('alloc da('gbase'(+1)) new catalog gdgnt',
            'lrecl(200) recfm(v,b) blksize(0)',
            'tracks space(1,1) unit(sysda) rtddn(xdd)')
     /*
     Note using the GDGNT flag because an allocation of a GDG data set
     refers to the same data set for the life of the job (or TSO/E
     logon session), even if another generation is added during the
     job, unless the GDGNT option is used.
     */
     if cc<>0 then exit xmsg('Alloc gds#' gn 'failed' cc,8)
     cc=bpxwdyn('free dd('xdd')')
   end
 end
 say 'Test gds created'
 zz=Outtrap('lst.')
 "listc lvl("gbase")"
 zz=Outtrap('off')
 do n=1 to lst.0
   if word(lst.n,1)='NONVSAM' then say word(lst.n,3)
 end
 say ''

 /* create dataset with alias */
 trace off
 testlib=dbase'.TEST.LIB'
 alias  =dbase'.TESTLIB'
 cc=bpxwdyn('alloc da('testlib') new catalog',
            'lrecl(200) recfm(v,b) blksize(0)',
            'tracks space(1,1) unit(sysda) rtddn(xdd)')
 trace off
 if cc<>0 then exit xmsg('Alloc testlib' testlib 'failed' cc,8)
 say 'Alloc testlib' testlib 'ok'
 "DEFINE ALIAS(NAME('"alias"') RELATE('"testlib"'))"
 if rc<>0 then exit xmsg('Create alias' alias 'failed' rc,8)
 cc=bpxwdyn('free dd('xdd')')

 /* start test */
 Call Go gbase'(-1)',,'Testing relative gds'
 Call Go dbase'.TEST.LIB',,'Testing real name'
 Call Go dbase'.TESTLIB',,'Testing alias'
 Call Go "'"dbase".TESTLIB'",,'Testing quoted alias'
 Call Go 'DOES.NOT.EXIST',,'Testing non-exist without alternate name'
 Call Go 'DOES.NOT.EXIST','alt.ds','Testing non-exist with alternate name'
 Call Go gbase'(+1)',,'Testing relative positive gds'
 say ''
 say 'Cleanup...'
 Call DelTestDs

 exit 0

Go:
 parse arg ds,nft,text
 say ''
 if text<>'' then say text
 say 'testing' ds
 say 'returns' RxRealDs(ds,nft)
 return 0

XMsg: if arg(1)<>'' then say arg(1);return word(arg(2) 0,1)

DelTestDs:
 zz=Outtrap('lst.')
 "listc lvl("gbase")"
 cc=rc
 zz=Outtrap('off')
 do n=1 to lst.0
   if word(lst.n,1)='NONVSAM' then "delete '"word(lst.n,3)"'"
 end
 if cc=0 then "delete '"gbase"'"
 say ''
 if Sysdsn("'"dbase".TESTLIB'")='OK' then "delete '"dbase".TESTLIB'"
 if Sysdsn("'"dbase".TEST.LIB'")='OK' then "delete '"dbase".TEST.LIB'"
 return 0
